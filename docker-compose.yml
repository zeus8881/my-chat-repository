services:
  userservice:
    build: ./userservices
    container_name: userservice
    ports:
      - "8083:8080"
    environment:
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:9095
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: microserviceDb1
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Qwerty_12345
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/microserviceDb1
      USERSERVICES_BASE_URL: http://userservice:8080
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - app_net
    depends_on:
      - mysql
      - redis
    restart: always

  chatservice:
    build: ./ChatService
    container_name: chatservice
    ports:
      - "8090:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      USERSERVICES_BASE_URL: http://userservice:8080
      REDIS_HOST: redis
      KAFKA_BOOTSTRAP_SERVERS: kafka:9095
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: chatServiceDb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Qwerty_12345
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/chatServiceDb
    networks:
      - app_net
    depends_on:
      - userservice
      - redis
    restart: always

  messageservice:
    build: ./MessageService
    container_name: messageservice
    ports:
      - "8091:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      REDIS_HOST: redis  
      USERSERVICES_BASE_URL: http://userservice:8080
      KAFKA_BOOTSTRAP_SERVERS: kafka:9095
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: messageDb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Qwerty_12345
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/messageDb
    networks:
      - app_net
    depends_on:
      - userservice
      - redis
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mySqlContainer
    environment:
      MYSQL_DATABASE: microserviceDb1
      MYSQL_ROOT_PASSWORD: Qwerty_12345
    ports:
      - "3302:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloakDb1Container
    command: start-dev
    environment:
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloakDb1
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: Qwerty_12345
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      networks:
        - app_net
    ports:
      - "9093:8080"
    depends_on:
      - mysql
    restart: always

  redis:
    image: redis:latest
    container_name: myRedisContainer
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    restart: always

networks:
  app_net:
    driver: bridge


volumes:
  mysql_data:
  redis_data:


